name: Build a Website Using Hugo

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Obtiene los temas de Hugo (true o recursive)
          fetch-depth: 0    # Obtiene todo el historial para .GitInfo y .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.135.0'
          extended: true  # Usa la versiÃ³n extendida de Hugo para soporte de SCSS/SASS

      - name: Build
        run: hugo --minify

      - name: Upload Build Artefact
        uses: actions/upload-artifact@v4
        with:
          name: tech-blog
          path: public/**

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::710271911247:role/GitHubOIDCDeployRole
          aws-region: eu-west-1

      - name: Deploy to s3
        run: |
          aws s3 sync ./public/ s3://matiasblogbucket --delete

      - name: Assume CloudFront role
        run: |
          CREDENTIALS=$(aws sts assume-role \
            --role-arn arn:aws:iam::762233767039:role/CloudFrontInvalidationRole \
            --role-session-name GitHubActionsCloudFrontSession)
          
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E3IJ20B8VY1E \
            --paths "/*"
